#!/usr/sbin/nft -f
#permissive nftables firewall config for a desktop linux pc

#flush old rules
flush ruleset

define in_interface_index = { wlan0, eth0 }
define out_interface_index = { wlan0, eth0 }

#main table
add table inet filter 

#main chains
add chain inet filter prerouting {
  type filter hook prerouting priority 0; policy accept;
  meta nftrace set 1
}

add chain inet filter input { 
  type filter hook input priority 0; policy drop; 
  meta nftrace set 1
}
add chain inet filter forward { 
  type filter hook forward priority 0; policy drop;
  meta nftrace set 1
}
add chain inet filter output { 
  type filter hook output priority 100; policy drop; 
  meta nftrace set 1
}

#loopback
add rule inet filter input iif "lo" counter log flags all prefix "nftables: LOOPBACK:" level debug accept
add rule inet filter output oif "lo" counter log flags all prefix "nftables: LOOPBACK:" level debug accept

#accept and counter log anything else
add rule inet filter input iif $in_interface_index \
counter \
log flags all prefix "nftables: ACCEPT INBOUND:" level debug \
accept

add rule inet filter output oif $out_interface_index \
counter \
log flags all prefix "nftables: ACCEPT OUTBOUND:" level debug \
accept

### ARP ###
add table arp filter
add chain arp filter input {
    type filter hook input priority 0; policy drop;
}
add rule arp filter input iif $in_interface_index counter accept
add chain arp filter output { 
    type filter hook output priority 100; policy drop;
}
add rule arp filter output oif $in_interface_index counter accept

### NAT ###
add table nat
add chain nat prerouting { 
    type nat hook prerouting priority 0; policy drop; 
}
add chain nat postrouting { 
    type nat hook postrouting priority 100; policy drop;
}
add rule nat postrouting counter log accept;
add rule nat prerouting counter log accept;
