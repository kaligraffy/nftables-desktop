#!/usr/sbin/nft -f

#restrictive nftables firewall config for a desktop linux pc

#flush old rules
flush ruleset

#cloudflare ntp server
define ntp_servers = { 162.159.200.123, 162.159.200.1 }

#cloudflare dns
define dns_servers = { 1.1.1.1 }

define in_interface_index = wlan0
define out_interface_index = wlan0

#main table
add table inet filter

#main chains
add chain inet filter input { type filter hook input priority 0; policy drop; }
add chain inet filter forward { type filter hook forward priority 0; policy drop; }
add chain inet filter output { type filter hook output priority 0; policy drop; }

#logging chains
add chain inet filter log_accept
add rule inet filter log_accept counter log flags skuid prefix "nftables: ACCEPT:" level info
add rule inet filter log_accept counter accept

add chain inet filter log_drop
add rule inet filter log_drop limit rate 5/minute burst 5 packets counter log flags skuid prefix "nftables: DROP:" level info
add rule inet filter log_drop counter drop

#loopback
add rule inet filter input iif "lo" counter jump log_accept
add rule inet filter output oif "lo" counter jump log_accept

#invalid packets
add rule inet filter input  iif $in_interface_index ct state invalid counter jump log_drop
add rule inet filter output oif $out_interface_index ct state invalid counter jump log_drop

#ping 
add rule inet filter input  iif $in_interface_index icmp type echo-reply ct state related,established counter jump log_accept
add rule inet filter output oif $out_interface_index icmp type echo-request ct state new,related,established counter jump log_accept

#ping icmpv6
add rule inet filter input  iif $in_interface_index icmpv6 type echo-reply ct state related,established counter jump log_accept
add rule inet filter output oif $out_interface_index icmpv6 type echo-request ct state new,related,established counter jump log_accept


#http
add rule inet filter input  iif $in_interface_index ip protocol tcp tcp sport 80 ct state related,established counter jump log_accept
add rule inet filter output oif $out_interface_index ip protocol tcp tcp dport 80 ct state new,related,established counter jump log_accept

#https
add rule inet filter input  iif $in_interface_index ip protocol tcp tcp sport 443 ct state related,established counter jump log_accept
add rule inet filter output oif $out_interface_index ip protocol tcp tcp dport 443 ct state new,related,established counter jump log_accept

#outbound ssh
add rule inet filter input  iif $in_interface_index ip protocol tcp tcp sport 22 ct state related,established counter jump log_accept
add rule inet filter output oif $out_interface_index ip protocol tcp tcp dport 22 ct state new,related,established counter jump log_accept

#inbound ssh - uncomment if required
#add rule inet filter input  iif $in_interface_index ip protocol tcp tcp sport 22 ct state new,related,established counter jump log_accept
#add rule inet filter output oif $out_interface_index ip protocol tcp tcp dport 22 ct state related,established counter jump log_accept

#vanilla dns
add rule inet filter input  iif $in_interface_index ip protocol udp ip saddr $dns_servers udp sport 53 ct state related,established counter jump log_accept
add rule inet filter output oif $out_interface_index ip protocol udp ip daddr $dns_servers udp dport 53 ct state new,related,established counter jump log_accept

#dns over tls
add rule inet filter input  iif $in_interface_index ip protocol tcp ip saddr $dns_servers tcp sport 853 ct state related,established counter jump log_accept
add rule inet filter output oif $out_interface_index ip protocol tcp ip daddr $dns_servers tcp dport 853 ct state new,related,established counter jump log_accept

#ntp 
add rule inet filter output oif $out_interface_index ip protocol udp ip daddr $ntp_servers udp dport 123 ct state new,related,established counter jump log_accept
add rule inet filter input  iif $in_interface_index ip protocol udp ip saddr $ntp_servers udp sport 123 ct state related,established counter jump log_accept

#drop and log anything else
add rule inet filter input  iif $in_interface_index counter jump log_drop
add rule inet filter output oif $out_interface_index counter jump log_drop


#table arp logging - WIP 
#modprobe nf_tables_arp
#required for this part:
#add table arp filter 
#add chain arp filter input { type filter hook input priority 0; policy drop; }
#add chain arp filter output { type filter hook output priority 0; policy drop; }
#
#add rule arp filter input counter log accept
#add rule arp filter output counter log accept

